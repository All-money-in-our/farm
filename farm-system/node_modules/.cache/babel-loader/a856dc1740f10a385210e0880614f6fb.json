{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"E:\\\\\\u5DE5\\u4F5C\\u533A\\\\\\u7B2C\\u4E09\\u9636\\u6BB5\\u7EC3\\u4E60\\\\react\\\\farm\\\\farm-system\\\\src\\\\pages\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport styles from '../../style/Login.module.less';\nimport { UserLogin } from '../../api/user';\nimport { setItem } from '../../utils/webStorage';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.login = () => {\n      let _this$props$form = this.props.form,\n          getFieldsValue = _this$props$form.getFieldsValue,\n          validateFields = _this$props$form.validateFields;\n      validateFields((err, data) => {\n        //   console.log(err, data)\n        //err 前端的字段验证 true 不通过 null 没问题\n        if (err) return _message.error('输入有误,请重试!', 1); //字段验证ok 继续向下\n\n        let userName = data.userName,\n            passWord = data.passWord;\n        UserLogin(userName, passWord).then(res => {\n          console.log('then', res);\n          setItem('token', res.token);\n          setItem('uid', res.uid);\n          setItem('rootIds', res.rootList);\n\n          _message.success('登录成功，1s后跳转首页', 1, () => {\n            this.props.history.replace('/admin/home');\n          });\n        }).catch(err => {\n          _message.error('登录失败请重试', 1);\n        });\n      });\n      getFieldsValue(); // console.log(result)\n    };\n  }\n\n  render() {\n    let getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: styles.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u7528\\u6237\\u767B\\u5F55\",\n      className: styles['login-card'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '用户名不能为空!'\n      }, {\n        min: 3,\n        message: '用户名不能小于3位字符!'\n      }, {\n        max: 9,\n        message: '用户名不能大于9位字符!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      type: \"text\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, getFieldDecorator('passWord', {\n      rules: [{\n        required: true,\n        message: '用户密码不能为空'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Remember me\"), React.createElement(\"a\", {\n      className: styles.loginForgot,\n      href: \"javascript()\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Forgot password\"), React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.login,\n      className: styles.loginButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"javascript()\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n} // Form.create 是一个函数 返回一个高阶组件\n// 将antd表单相关的api挂载到 props的form里\n\n\nexport default _Form.create()(Login);","map":{"version":3,"sources":["E:/工作区/第三阶段练习/react/farm/farm-system/src/pages/Login/Login.js"],"names":["React","Component","styles","UserLogin","setItem","Login","login","props","form","getFieldsValue","validateFields","err","data","error","userName","passWord","then","res","console","log","token","uid","rootList","success","history","replace","catch","render","getFieldDecorator","rules","required","message","min","max","color","loginForgot","loginButton","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from '../../style/Login.module.less'\r\nimport {UserLogin} from '../../api/user'\r\nimport { setItem } from '../../utils/webStorage'\r\nimport { Card, Form, Input, Icon, Checkbox, Button, message } from 'antd'\r\nclass Login extends Component {\r\n  login = () => {\r\n    let { getFieldsValue, validateFields } = this.props.form\r\n    validateFields((err, data) => {\r\n    //   console.log(err, data)\r\n      //err 前端的字段验证 true 不通过 null 没问题\r\n      if (err) return message.error('输入有误,请重试!', 1)\r\n      //字段验证ok 继续向下\r\n      let { userName, passWord } = data\r\n      UserLogin(userName, passWord)\r\n        .then((res) => {\r\n          console.log('then', res)\r\n          setItem('token', res.token)\r\n          setItem('uid', res.uid)\r\n          setItem('rootIds', res.rootList)\r\n          message.success('登录成功，1s后跳转首页', 1, () => {\r\n            this.props.history.replace('/admin/home')\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          message.error('登录失败请重试', 1)\r\n        })\r\n    })\r\n    getFieldsValue()\r\n    // console.log(result)\r\n  }\r\n  render() {\r\n    let { getFieldDecorator } = this.props.form\r\n    return (\r\n      <div className={styles.login}>\r\n        <Card title='用户登录' className={styles['login-card']}>\r\n          <Form.Item>\r\n            {getFieldDecorator('userName', {\r\n              rules: [{ required: true, message: '用户名不能为空!' },\r\n              { min: 3, message: '用户名不能小于3位字符!' },\r\n              { max: 9, message: '用户名不能大于9位字符!' }]\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('passWord', {\r\n              rules: [{ required: true, message: '用户密码不能为空' }]\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Checkbox>Remember me</Checkbox>\r\n            <a className={styles.loginForgot} href=\"javascript()\">\r\n              Forgot password\r\n              </a>\r\n            <Button type=\"primary\" onClick={this.login} className={styles.loginButton}>\r\n              Log in\r\n\t\t\t</Button>\r\n            Or <a href=\"javascript()\">register now!</a>\r\n          </Form.Item>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// Form.create 是一个函数 返回一个高阶组件\r\n// 将antd表单相关的api挂载到 props的form里\r\nexport default Form.create()(Login);\r\n"]},"metadata":{},"sourceType":"module"}