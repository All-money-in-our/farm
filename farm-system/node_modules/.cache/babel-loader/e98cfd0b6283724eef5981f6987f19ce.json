{"ast":null,"code":"// 封装 ajax\nfunction xhrGet(url) {\n  return new Promise(function (resolve, reject) {\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.send(null);\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        resolve(xhr.responseText);\n      }\n    };\n  });\n} // 请求天气接口\n\n\nexport const getWeatherDate = () => {\n  let url = '/weather/mojiweather/forecast.php';\n  xhrGet(url).then(config => {\n    console.log('📇📜: xhrGet -> config', config);\n    return config.data;\n  }).catch(err => {\n    console.log('📇📜: getWeatherDate -> err', err);\n  }); // result = JSON.parse(result)\n  // if (result.code == 0) {\n  //     return result\n  // } else {\n  //     throw result\n  // }\n};","map":{"version":3,"sources":["E:/工作区/第三阶段练习/react/farm/farm-system/src/api/weather.js"],"names":["xhrGet","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","responseText","getWeatherDate","then","config","console","log","data","catch","err"],"mappings":"AAAA;AACA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,IAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;;AACAH,IAAAA,GAAG,CAACI,kBAAJ,GAAyB,YAAY;AACjC,UAAIJ,GAAG,CAACK,UAAJ,KAAmB,CAAnB,IAAwBL,GAAG,CAACM,MAAJ,KAAe,GAA3C,EAAgD;AAC5CR,QAAAA,OAAO,CAACE,GAAG,CAACO,YAAL,CAAP;AACH;AACJ,KAJD;AAKH,GATM,CAAP;AAUH,C,CAED;;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,MAAIZ,GAAG,GAAG,mCAAV;AACAD,EAAAA,MAAM,CAACC,GAAD,CAAN,CACKa,IADL,CACWC,MAAD,IAAY;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,MAAtC;AACA,WAAOA,MAAM,CAACG,IAAd;AACH,GAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CG,GAA3C;AACH,GAPL,EAFgC,CAUhC;AACA;AACA;AACA;AACA;AACA;AACH,CAhBM","sourcesContent":["// 封装 ajax\r\nfunction xhrGet(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('GET', url)\r\n        xhr.send(null)\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                resolve(xhr.responseText)\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n// 请求天气接口\r\nexport const getWeatherDate = () => {\r\n    let url = '/weather/mojiweather/forecast.php'\r\n    xhrGet(url)\r\n        .then((config) => {\r\n            console.log('📇📜: xhrGet -> config', config)\r\n            return config.data\r\n        })\r\n        .catch((err) => {\r\n            console.log('📇📜: getWeatherDate -> err', err)\r\n        })\r\n    // result = JSON.parse(result)\r\n    // if (result.code == 0) {\r\n    //     return result\r\n    // } else {\r\n    //     throw result\r\n    // }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}