{"ast":null,"code":"import dataList from './dataList';\nexport const filterDataList = ids => {\n  // 根据权限id列表过滤正确的权限数据\n  let result = [];\n\n  for (let index = 0; index < dataList.length; index++) {\n    let id = dataList[index].id;\n    console.log(id);\n\n    if (ids.indexOf(id) !== -1) {\n      // 满足id条件 直接push到新数组\n      result.push(dataList[index]);\n    } else if (ids.indexOf(id) === -1 && dataList[index].children) {\n      // 父级导航id不满足条件但存在子节点 判断子节点是否满足\n      let state = false;\n      let tmp = [];\n\n      for (let i = 0; i < dataList[index].length; i++) {\n        let childrenId = dataList[index].children[i].id;\n\n        if (ids.indexOf(childrenId) !== -1) {\n          tmp.push(dataList[index.children[i]]);\n          state = true;\n        }\n      }\n\n      if (state) {\n        dataList[index].children = tmp;\n        result.push(dataList[index]);\n      }\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["E:/千锋资料/farm/farm-system/src/component/SlideNav/filterDataList.js"],"names":["dataList","filterDataList","ids","result","index","length","id","console","log","indexOf","push","children","state","tmp","i","childrenId"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAAS;AACnC;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,QAAQ,CAACK,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;AAClD,QAAIE,EAAE,GAAGN,QAAQ,CAACI,KAAD,CAAR,CAAgBE,EAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AACA,QAAIJ,GAAG,CAACO,OAAJ,CAAYH,EAAZ,MAAoB,CAAC,CAAzB,EAA4B;AACxB;AACAH,MAAAA,MAAM,CAACO,IAAP,CAAYV,QAAQ,CAACI,KAAD,CAApB;AACH,KAHD,MAGO,IAAIF,GAAG,CAACO,OAAJ,CAAYH,EAAZ,MAAoB,CAAC,CAArB,IAA0BN,QAAQ,CAACI,KAAD,CAAR,CAAgBO,QAA9C,EAAwD;AAC3D;AACA,UAAIC,KAAK,GAAG,KAAZ;AACA,UAAIC,GAAG,GAAC,EAAR;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACd,QAAQ,CAACI,KAAD,CAAR,CAAgBC,MAA9B,EAAqCS,CAAC,EAAtC,EAAyC;AACrC,YAAIC,UAAU,GAAGf,QAAQ,CAACI,KAAD,CAAR,CAAgBO,QAAhB,CAAyBG,CAAzB,EAA4BR,EAA7C;;AACA,YAAGJ,GAAG,CAACO,OAAJ,CAAYM,UAAZ,MAA4B,CAAC,CAAhC,EAAkC;AAC9BF,UAAAA,GAAG,CAACH,IAAJ,CAASV,QAAQ,CAACI,KAAK,CAACO,QAAN,CAAeG,CAAf,CAAD,CAAjB;AACAF,UAAAA,KAAK,GAAG,IAAR;AACH;AACJ;;AACD,UAAGA,KAAH,EAAS;AACLZ,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBO,QAAhB,GAA2BE,GAA3B;AACAV,QAAAA,MAAM,CAACO,IAAP,CAAYV,QAAQ,CAACI,KAAD,CAApB;AACH;AACJ;AACJ;;AACD,SAAOD,MAAP;AACH,CA3BM","sourcesContent":["import dataList from './dataList'\r\nexport const filterDataList = (ids) => {\r\n    // 根据权限id列表过滤正确的权限数据\r\n    let result = []\r\n    for (let index = 0; index < dataList.length; index++) {\r\n        let id = dataList[index].id\r\n        console.log(id)\r\n        if (ids.indexOf(id) !== -1) {\r\n            // 满足id条件 直接push到新数组\r\n            result.push(dataList[index])\r\n        } else if (ids.indexOf(id) === -1 && dataList[index].children) {\r\n            // 父级导航id不满足条件但存在子节点 判断子节点是否满足\r\n            let state = false\r\n            let tmp=[]\r\n            for(let i=0;i<dataList[index].length;i++){\r\n                let childrenId = dataList[index].children[i].id\r\n                if(ids.indexOf(childrenId) !== -1){\r\n                    tmp.push(dataList[index.children[i]])\r\n                    state = true\r\n                }\r\n            }\r\n            if(state){\r\n                dataList[index].children = tmp\r\n                result.push(dataList[index])\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}"]},"metadata":{},"sourceType":"module"}