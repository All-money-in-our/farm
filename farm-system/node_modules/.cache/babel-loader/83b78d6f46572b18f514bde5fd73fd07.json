{"ast":null,"code":"import \"antd/lib/pagination/style\";\nimport _Pagination from \"antd/lib/pagination\";\nimport \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"E:\\\\\\u5343\\u950B\\u8D44\\u6599\\\\farm\\\\farm-system\\\\src\\\\pages\\\\Section\\\\sectionUpdate.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getSelections } from '../../api/section';\nimport styles from '../../style/Section.module.less';\nconst sectionColumns = [// {\n// \ttitle: '部门编号',\n// \tdataIndex: '_id',\n// \tkey: '_id',\n// },\n{\n  title: '部门名称',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '部门负责人',\n  dataIndex: 'leader',\n  key: 'leader'\n}, {\n  title: '部门职责',\n  dataIndex: 'duty',\n  key: 'duty'\n}, {\n  title: '部门人数',\n  dataIndex: 'peopleCount',\n  key: 'peopleCount'\n}, {\n  title: '部门邮箱',\n  dataIndex: 'email',\n  key: 'email'\n}, {\n  title: '部门电话',\n  dataIndex: 'phone',\n  key: 'phone'\n}, {\n  title: '数据修改',\n  dataIndex: 'update',\n  key: 'update',\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      className: styles.btnprimary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u4FEE\\u6539\"), React.createElement(_Button, {\n      type: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u5220\\u9664\"));\n  }\n\n}];\nconst pageSize = 3;\n\nclass SectionCreate extends Component {\n  constructor() {\n    super();\n    this.state = {\n      spinning: false,\n      nowPage: 1,\n      //当前页数\n      allCount: 0,\n      //总数据条数\n      sectionData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTableData(1);\n  }\n\n  getTableData(nowPage) {\n    // 根据页数获取网络数据\n    this.setState({\n      spinning: true\n    });\n    getSelections(nowPage, pageSize).then(res => {\n      console.log(res);\n      this.setState({\n        sectionData: res.list.sections,\n        allCount: res.list.allCount,\n        spinning: false\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        sectionData = _this$state.sectionData,\n        allCount = _this$state.allCount,\n        spinning = _this$state.spinning;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(_Spin, {\n      spinning: spinning,\n      tip: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      className: styles.table,\n      dataSource: sectionData,\n      columns: sectionColumns,\n      pagination: false,\n      rowKey: \"_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(_Pagination, {\n      className: styles.antPagination,\n      showQuickJumper: true,\n      defaultCurrent: 1,\n      total: allCount,\n      pageSize: pageSize,\n      onChange: page => {\n        this.getTableData(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SectionCreate;","map":{"version":3,"sources":["E:/千锋资料/farm/farm-system/src/pages/Section/sectionUpdate.js"],"names":["React","Component","Fragment","getSelections","styles","sectionColumns","title","dataIndex","key","render","btnprimary","pageSize","SectionCreate","constructor","state","spinning","nowPage","allCount","sectionData","componentDidMount","getTableData","setState","then","res","console","log","list","sections","table","antPagination","page"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { getSelections } from '../../api/section'\r\nimport styles from '../../style/Section.module.less'\r\n\r\nimport { Table, Button, Pagination, Spin } from 'antd'\r\nconst sectionColumns = [\r\n\t// {\r\n\t// \ttitle: '部门编号',\r\n\t// \tdataIndex: '_id',\r\n\t// \tkey: '_id',\r\n\t// },\r\n\t{\r\n\t\ttitle: '部门名称',\r\n\t\tdataIndex: 'name',\r\n\t\tkey: 'name',\r\n\t},\r\n\t{\r\n\t\ttitle: '部门负责人',\r\n\t\tdataIndex: 'leader',\r\n\t\tkey: 'leader',\r\n\t},\r\n\t{\r\n\t\ttitle: '部门职责',\r\n\t\tdataIndex: 'duty',\r\n\t\tkey: 'duty',\r\n\t},\r\n\t{\r\n\t\ttitle: '部门人数',\r\n\t\tdataIndex: 'peopleCount',\r\n\t\tkey: 'peopleCount',\r\n\t},\r\n\t{\r\n\t\ttitle: '部门邮箱',\r\n\t\tdataIndex: 'email',\r\n\t\tkey: 'email',\r\n\t},\r\n\t{\r\n\t\ttitle: '部门电话',\r\n\t\tdataIndex: 'phone',\r\n\t\tkey: 'phone',\r\n\t},\r\n\t{\r\n\t\ttitle: '数据修改',\r\n\t\tdataIndex: 'update',\r\n\t\tkey: 'update',\r\n\t\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Button type=\"primary\" className={styles.btnprimary}>修改</Button>\r\n\t\t\t\t\t<Button type=\"danger\">删除</Button>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)\r\n\t\t}\r\n\t},\r\n]\r\n\r\nconst pageSize = 3;\r\n\r\nclass SectionCreate extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tspinning:false,\r\n\t\t\tnowPage: 1,//当前页数\r\n\t\t\tallCount: 0,//总数据条数\r\n\t\t\tsectionData: [],\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.getTableData(1)\r\n\t}\r\n\tgetTableData(nowPage) {\r\n\t\t// 根据页数获取网络数据\r\n\t\tthis.setState({spinning:true})\r\n\t\tgetSelections(nowPage, pageSize)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tthis.setState({ sectionData: res.list.sections, allCount: res.list.allCount, spinning:false })\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { sectionData, allCount, spinning } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Spin spinning={spinning} tip=\"Loading...\">\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName={styles.table}\r\n\t\t\t\t\t\tdataSource={sectionData}\r\n\t\t\t\t\t\tcolumns={sectionColumns}\r\n\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\trowKey='_id' />\r\n\t\t\t\t</Spin>\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tclassName={styles.antPagination}\r\n\t\t\t\t\tshowQuickJumper defaultCurrent={1}\r\n\t\t\t\t\ttotal={allCount}\r\n\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\tonChange={(page) => {\r\n\t\t\t\t\t\tthis.getTableData(page)\r\n\t\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SectionCreate\r\n"]},"metadata":{},"sourceType":"module"}