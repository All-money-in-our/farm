{"ast":null,"code":"// 封装 ajax\nfunction xhrGet(url) {\n  new Promise(function (resolve, reject) {\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.send(null);\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        resolve(JSON.parse(xhr.responseText));\n      } else {\n        reject(JSON.parse(xhr.responseText));\n      }\n    };\n  });\n} // 请求天气接口\n\n\nexport const getWeatherDate = () => {\n  return new Promise((resolve, reject) => {\n    let url = '/weather/mojiweather/forecast.php';\n    xhrGet(url).then(res => {\n      if (res.code === 0) {\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n};","map":{"version":3,"sources":["E:/工作区/第三阶段练习/react/farm/farm-system/src/api/weather.js"],"names":["xhrGet","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","JSON","parse","responseText","getWeatherDate","then","res","code"],"mappings":"AAAA;AACA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,MAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAClC,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,IAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;;AACAH,IAAAA,GAAG,CAACI,kBAAJ,GAAyB,YAAY;AACjC,UAAIJ,GAAG,CAACK,UAAJ,KAAmB,CAAnB,IAAwBL,GAAG,CAACM,MAAJ,KAAe,GAA3C,EAAgD;AAC5CR,QAAAA,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,YAAf,CAAD,CAAP;AACH,OAFD,MAEO;AACHV,QAAAA,MAAM,CAACQ,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,YAAf,CAAD,CAAN;AACH;AACJ,KAND;AAOH,GAXD;AAYH,C,CAED;;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIH,GAAG,GAAG,mCAAV;AACAD,IAAAA,MAAM,CAACC,GAAD,CAAN,CACKe,IADL,CACWC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;AAChBf,QAAAA,OAAO,CAACc,GAAD,CAAP;AACH,OAFD,MAEO;AACHb,QAAAA,MAAM,CAACa,GAAD,CAAN;AACH;AACJ,KAPL;AAQH,GAVM,CAAP;AAWH,CAZM","sourcesContent":["// 封装 ajax\r\nfunction xhrGet(url) {\r\n    new Promise(function(resolve, reject) {\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('GET', url)\r\n        xhr.send(null)\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                resolve(JSON.parse(xhr.responseText))\r\n            } else {\r\n                reject(JSON.parse(xhr.responseText))\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n// 请求天气接口\r\nexport const getWeatherDate = () => {\r\n    return new Promise((resolve, reject) => {\r\n        let url = '/weather/mojiweather/forecast.php'\r\n        xhrGet(url)\r\n            .then((res) => {\r\n                if (res.code === 0) {\r\n                    resolve(res)\r\n                } else {\r\n                    reject(res)\r\n                }\r\n            })\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}