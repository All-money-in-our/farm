{"ast":null,"code":"// 引入 axios 模块\nimport axios from 'axios';\n/*\r\n    * 请求拦截器    可以在使用 axios 发起请求之前，进行拦截，接收所有的请求参数，并进行修改\r\n    * 响应拦截器    可以在使用 axios 接收数据前进行拦截，对接收的数据进行处理\r\n*/\n// 添加一个请求拦截器\n\naxios.interceptors.request.use(config => {\n  // 发起请求前的操作\n  return config;\n}, error => {\n  // 处理请求错误\n  return Promise.reject(error);\n}); // 添加一个响应拦截器\n\naxios.interceptors.response.use(response => {\n  // 处理响应数据\n  return response.data; // 对数据先做一次过滤处理\n}, error => {\n  // 处理响应错误\n  return Promise.reject(error);\n}); // 导出 axios 模块\n\nexport default axios;","map":{"version":3,"sources":["E:/工作区/第三阶段练习/react/farm/farm-system/src/utils/axiosWeather.js"],"names":["axios","interceptors","request","use","config","error","Promise","reject","response","data"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;AAKA;;AACAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,MAAD,IAAY;AACvC;AACA,SAAOA,MAAP;AACH,CAHD,EAGIC,KAAD,IAAW;AACV;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAND,E,CAQA;;AACAL,KAAK,CAACC,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAiCK,QAAD,IAAc;AAC1C;AACA,SAAOA,QAAQ,CAACC,IAAhB,CAF0C,CAErB;AACxB,CAHD,EAGIJ,KAAD,IAAW;AACV;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAND,E,CAQA;;AACA,eAAeL,KAAf","sourcesContent":["// 引入 axios 模块\r\nimport axios from 'axios'\r\n\r\n/*\r\n    * 请求拦截器    可以在使用 axios 发起请求之前，进行拦截，接收所有的请求参数，并进行修改\r\n    * 响应拦截器    可以在使用 axios 接收数据前进行拦截，对接收的数据进行处理\r\n*/\r\n\r\n// 添加一个请求拦截器\r\naxios.interceptors.request.use((config) => {\r\n    // 发起请求前的操作\r\n    return config\r\n}, (error) => {\r\n    // 处理请求错误\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 添加一个响应拦截器\r\naxios.interceptors.response.use((response) => {\r\n    // 处理响应数据\r\n    return response.data // 对数据先做一次过滤处理\r\n}, (error) => {\r\n    // 处理响应错误\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 导出 axios 模块\r\nexport default axios\r\n"]},"metadata":{},"sourceType":"module"}