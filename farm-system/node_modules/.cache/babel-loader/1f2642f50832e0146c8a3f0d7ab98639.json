{"ast":null,"code":"// // 引入 axios 模块\n// import axios from 'axios'\n// /*\n//     * 请求拦截器    可以在使用 axios 发起请求之前，进行拦截，接收所有的请求参数，并进行修改\n//     * 响应拦截器    可以在使用 axios 接收数据前进行拦截，对接收的数据进行处理\n// */\n// // 添加一个请求拦截器\n// axios.interceptors.request.use((config) => {\n//     // 发起请求前的操作\n//     return config\n// }, (error) => {\n//     // 处理请求错误\n//     return Promise.reject(error)\n// })\n// // 添加一个响应拦截器\n// axios.interceptors.response.use((response) => {\n//     // 处理响应数据\n//     return response.data // 对数据先做一次过滤处理\n// }, (error) => {\n//     // 处理响应错误\n//     return Promise.reject(error)\n// })\n// // 导出 axios 模块\n// export default axios","map":{"version":3,"sources":["E:/工作区/第三阶段练习/react/farm/farm-system/src/utils/axiosWeather.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// // 引入 axios 模块\r\n// import axios from 'axios'\r\n\r\n// /*\r\n//     * 请求拦截器    可以在使用 axios 发起请求之前，进行拦截，接收所有的请求参数，并进行修改\r\n//     * 响应拦截器    可以在使用 axios 接收数据前进行拦截，对接收的数据进行处理\r\n// */\r\n\r\n// // 添加一个请求拦截器\r\n// axios.interceptors.request.use((config) => {\r\n//     // 发起请求前的操作\r\n//     return config\r\n// }, (error) => {\r\n//     // 处理请求错误\r\n//     return Promise.reject(error)\r\n// })\r\n\r\n// // 添加一个响应拦截器\r\n// axios.interceptors.response.use((response) => {\r\n//     // 处理响应数据\r\n//     return response.data // 对数据先做一次过滤处理\r\n// }, (error) => {\r\n//     // 处理响应错误\r\n//     return Promise.reject(error)\r\n// })\r\n\r\n// // 导出 axios 模块\r\n// export default axios\r\n"]},"metadata":{},"sourceType":"module"}