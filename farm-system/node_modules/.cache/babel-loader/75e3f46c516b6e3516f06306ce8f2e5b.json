{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"E:\\\\\\u5343\\u950B\\u8D44\\u6599\\\\farm\\\\farm-system\\\\src\\\\component\\\\SlideNav\\\\SlideNav.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport MenuItem from 'antd/lib/menu/MenuItem';\nimport { filterDataList } from './filterDataList';\nconst SubMenu = _Menu.SubMenu;\n\nfunction handleClick(e) {\n  console.log('click', e);\n}\n\nclass SlideNav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      menuData: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      let res = {\n        err: 0,\n        msg: 'ok',\n        token: '12313',\n        rootIds: ['0', '1', '2']\n      };\n      let result = filterDataList(res.rootIds);\n      this.setState({\n        menuData: result\n      });\n    }, 1000);\n  }\n\n  renderItem(data) {\n    // 需要渲染item的数据\n    // 没有数据渲染返回暂无数据\n    if (!data.length) return '暂无数据';\n    let result = data.map(item => {\n      if (item.children) {\n        return React.createElement(SubMenu, {\n          key: item.id,\n          title: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(_Icon, {\n            type: item.icon || 'reddit',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, item.name)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, this.renderItem(item.children));\n      } else {\n        return React.createElement(MenuItem, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: item.path || '/admin',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: item.icon || 'reddit',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, item.name || '暂无'))));\n      }\n    });\n    return result;\n  }\n\n  render() {\n    let menuData = this.state.menuData;\n    return React.createElement(_Menu, {\n      onClick: handleClick,\n      mode: \"vertical\",\n      theme: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderItem(menuData));\n  }\n\n}\n\nexport default SlideNav;","map":{"version":3,"sources":["E:/千锋资料/farm/farm-system/src/component/SlideNav/SlideNav.js"],"names":["React","Component","NavLink","MenuItem","filterDataList","SubMenu","handleClick","e","console","log","SlideNav","constructor","state","menuData","componentDidMount","setTimeout","res","err","msg","token","rootIds","result","setState","renderItem","data","length","map","item","children","id","icon","name","path","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;MAEQC,O,SAAAA,O;;AAER,SAASC,WAAT,CAAqBC,CAArB,EAAwB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;AACH;;AAED,MAAMG,QAAN,SAAuBT,SAAvB,CAAiC;AAC7BU,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,UAAU,CAAC,MAAI;AACX,UAAIC,GAAG,GAAC;AAACC,QAAAA,GAAG,EAAC,CAAL;AAAOC,QAAAA,GAAG,EAAC,IAAX;AAAgBC,QAAAA,KAAK,EAAC,OAAtB;AAA8BC,QAAAA,OAAO,EAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT;AAAtC,OAAR;AACA,UAAIC,MAAM,GAAGjB,cAAc,CAACY,GAAG,CAACI,OAAL,CAA3B;AACA,WAAKE,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAACQ;AAAV,OAAd;AACH,KAJS,EAIR,IAJQ,CAAV;AAKH;;AACDE,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb;AACA;AACA,QAAI,CAACA,IAAI,CAACC,MAAV,EAAkB,OAAO,MAAP;AAClB,QAAIJ,MAAM,GAAGG,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AAC5B,UAAIA,IAAI,CAACC,QAAT,EAAmB;AACf,eACI,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAED,IAAI,CAACE,EAAnB;AAAuB,UAAA,KAAK,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAM,YAAA,IAAI,EAAEF,IAAI,CAACG,IAAL,IAAa,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOH,IAAI,CAACI,IAAZ,CAFJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMK,KAAKR,UAAL,CAAgBI,IAAI,CAACC,QAArB,CANL,CADJ;AAUH,OAXD,MAWO;AACH,eAAO,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH,oBAAC,OAAD;AAAS,UAAA,EAAE,EAAEF,IAAI,CAACK,IAAL,IAAa,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,IAAI,EAAEL,IAAI,CAACG,IAAL,IAAa,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOH,IAAI,CAACI,IAAL,IAAa,IAApB,CAFJ,CADJ,CADG,CAAP;AAQH;AACJ,KAtBY,CAAb;AAuBA,WAAOV,MAAP;AACH;;AACDY,EAAAA,MAAM,GAAG;AAAA,QACCpB,QADD,GACc,KAAKD,KADnB,CACCC,QADD;AAEL,WACI;AAAM,MAAA,OAAO,EAAEP,WAAf;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAA4C,MAAA,KAAK,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKiB,UAAL,CAAgBV,QAAhB,CADL,CADJ;AAKH;;AAlD4B;;AAoDjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Menu, Icon } from 'antd';\r\nimport MenuItem from 'antd/lib/menu/MenuItem';\r\nimport {filterDataList} from './filterDataList'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction handleClick(e) {\r\n    console.log('click', e);\r\n}\r\n\r\nclass SlideNav extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            menuData: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        setTimeout(()=>{\r\n            let res={err:0,msg:'ok',token:'12313',rootIds:['0','1','2']}\r\n            let result = filterDataList(res.rootIds)\r\n            this.setState({menuData:result})\r\n        },1000)\r\n    }\r\n    renderItem(data) {\r\n        // 需要渲染item的数据\r\n        // 没有数据渲染返回暂无数据\r\n        if (!data.length) return '暂无数据'\r\n        let result = data.map((item) => {\r\n            if (item.children) {\r\n                return (\r\n                    <SubMenu key={item.id} title={\r\n                        <span>\r\n                            <Icon type={item.icon || 'reddit'} />\r\n                            <span>{item.name}</span>\r\n                        </span>\r\n                    }>\r\n                        {this.renderItem(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            } else {\r\n                return <MenuItem key={item.id}>\r\n                    <NavLink to={item.path || '/admin'}>\r\n                        <span>\r\n                            <Icon type={item.icon || 'reddit'} />\r\n                            <span>{item.name || '暂无'}</span>\r\n                        </span>\r\n                    </NavLink>\r\n                </MenuItem>\r\n            }\r\n        })\r\n        return result\r\n    }\r\n    render() {\r\n        let { menuData } = this.state\r\n        return (\r\n            <Menu onClick={handleClick} mode=\"vertical\" theme='dark'>\r\n                {this.renderItem(menuData)}\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\nexport default SlideNav\r\n"]},"metadata":{},"sourceType":"module"}